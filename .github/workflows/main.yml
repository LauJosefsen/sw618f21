# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  code-quality:
    
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: pylinter
        # You may pin to the exact commit or the version.
        # uses: alexanderdamiani/pylinter@f9e3029cf605992791a0ee1b44c152483bc9f3b9
        uses: alexanderdamiani/pylinter@v1.1.0
        with:
          # directory to run linting on
          python-root: ./src/api/
          # flake8 flags
          #flake8-flags: # optional, default is 
          # mypy flags
          #mypy-flags: # optional, default is 
          # optional exit on isort errors
          #fail-on-isort: # optional
          # skip flake8 checks
          #skip-flake8: # optional
          # skip mypy checks
          #skip-mypy: # optional
          # skip isort checks
          # skip-isort: # optional
        # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.

